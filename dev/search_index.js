var documenterSearchIndex = {"docs":
[{"location":"public/#Public","page":"Public","title":"Public","text":"","category":"section"},{"location":"public/","page":"Public","title":"Public","text":"Documentation for TermLayouts.jl's public interface.","category":"page"},{"location":"public/","page":"Public","title":"Public","text":"See the Internals section of the docs for internal type and function documentation.","category":"page"},{"location":"public/","page":"Public","title":"Public","text":"TermLayouts.run\nTermLayouts.TermLayoutsPreferences\nTermLayouts.PanelPrefs","category":"page"},{"location":"public/#TermLayouts.run","page":"Public","title":"TermLayouts.run","text":"Activate TermLayouts, and spawn a new REPL session\n\n\n\n\n\n","category":"function"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The home for TermLayouts.jl documentation.","category":"page"},{"location":"#Quickstart","page":"Home","title":"Quickstart","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Install TermLayouts:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add https://github.com/soumitradev/TermLayouts.jl.git","category":"page"},{"location":"","page":"Home","title":"Home","text":"Run TermLayouts.jl by running the run() function in the REPL:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using TermLayouts\n\njulia> TermLayouts.run()\nstarting REPL...","category":"page"},{"location":"#Configuration","page":"Home","title":"Configuration","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<!– TODO: Elaborate here –> TermLayouts.jl comes with it's default config, which is:","category":"page"},{"location":"","page":"Home","title":"Home","text":"[TermLayouts]\n  [TermLayouts.panels.left]\n  width = 70\n  title = \"\"\n  title_color = \"\"\n  border_color = \"red\"\n\n  [TermLayouts.panels.right]\n  width = 30\n  title = \"\"\n  title_color = \"\"\n  border_color = \"blue\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"note: TermLayouts' scoped configuration\nIf a TermLayouts config exists in the global scope, it will apply to all projects that run in the global scope. If a TermLayouts config file exists in the environment that has been activated, it use that config file. The config file needs to be in the working directory of that environment, and should be named LocalPreferences.toml ","category":"page"},{"location":"","page":"Home","title":"Home","text":"A TermLayouts config file is fairly simple. It can be described by the following two structures:","category":"page"},{"location":"","page":"Home","title":"Home","text":"TermLayouts.TermLayoutsPreferences\nTermLayouts.PanelPrefs","category":"page"},{"location":"#TermLayouts.TermLayoutsPreferences","page":"Home","title":"TermLayouts.TermLayoutsPreferences","text":"Describe the layout of Panels in TermLayouts\n\nFields\n\npanel1: Left Panel\npanel2: Right Panel\n\n\n\n\n\n","category":"type"},{"location":"#TermLayouts.PanelPrefs","page":"Home","title":"TermLayouts.PanelPrefs","text":"Describe the configuration of a Panel in TermLayouts\n\nFields\n\nwidth: Percentage of the maximum width the panel takes up\ntitle: Panel title text\ntitle_color: Panel title text color. See here\nborder_color: Panel border color. See here\n\n\n\n\n\n","category":"type"},{"location":"","page":"Home","title":"Home","text":"TermLayouts is limited to two panels as of now, due to limited types of panel implementations.","category":"page"},{"location":"","page":"Home","title":"Home","text":"warning: Width overflow\nIf your panel widths don't add up to 100 or less than 100, it will crop your gith panel by default","category":"page"},{"location":"","page":"Home","title":"Home","text":"The config file can be described with the above two structs, but in reality looks something like:","category":"page"},{"location":"","page":"Home","title":"Home","text":"[TermLayouts]\n  [TermLayouts.panels.left]\n  width = 80\n  title = \"REPL\"\n  title_color = \"blue\"\n  border_color = \"blue\"\n\n  [TermLayouts.panels.right]\n  width = 20\n  title = \"Plots\"\n  title_color = \"red\"\n  border_color = \"red\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"The TOML format is pretty self explanatory.","category":"page"},{"location":"internals/#Internals","page":"Internals","title":"Internals","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Documentation for TermLayouts.jl's internal types and functions.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Modules = [TermLayouts]\nPublic = false\nOrder   = [:type, :function]","category":"page"},{"location":"internals/#TermLayouts.ColoredChar","page":"Internals","title":"TermLayouts.ColoredChar","text":"Character struct that is used to parse ANSI strings\n\n\n\n\n\n","category":"type"},{"location":"internals/#TermLayouts.EditableString","page":"Internals","title":"TermLayouts.EditableString","text":"String structure to represent any string that can be manipulated using ANSI escape codes\n\n\n\n\n\n","category":"type"},{"location":"internals/#TermLayouts.TermLayoutsState","page":"Internals","title":"TermLayouts.TermLayoutsState","text":"A struct to describe the state of TermLayouts\n\n\n\n\n\n","category":"type"},{"location":"internals/#TermLayouts.Wrapper","page":"Internals","title":"TermLayouts.Wrapper","text":"Workaround for https://github.com/julia-vscode/julia-vscode/issues/1940\n\n\n\n\n\n","category":"type"},{"location":"internals/#TermLayouts.enterchar-Tuple{TermLayouts.EditableString, Char}","page":"Internals","title":"TermLayouts.enterchar","text":"Add one character to the EditableString\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.loadprefs-Tuple{}","page":"Internals","title":"TermLayouts.loadprefs","text":"Loads TermLayouts preferences from the environment\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.read_key","page":"Internals","title":"TermLayouts.read_key","text":"Read input from keyboard and handle relevant ANSI codes\n\n\n\n\n\n","category":"function"},{"location":"internals/#TermLayouts.run-Tuple{}","page":"Internals","title":"TermLayouts.run","text":"Activate TermLayouts, and spawn a new REPL session\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.simplifyANSI-Tuple{String, Bool}","page":"Internals","title":"TermLayouts.simplifyANSI","text":"Simplify an ANSI string into what ends up being displayed in the terminal\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.start_eval_backend-Tuple{Any}","page":"Internals","title":"TermLayouts.start_eval_backend","text":"Start the backend that will evaluate our expressions\n\n\n\n\n\n","category":"method"}]
}
