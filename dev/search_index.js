var documenterSearchIndex = {"docs":
[{"location":"public/#Public","page":"Public","title":"Public","text":"","category":"section"},{"location":"public/","page":"Public","title":"Public","text":"Documentation for TermLayouts.jl's public interface.","category":"page"},{"location":"public/","page":"Public","title":"Public","text":"See the Internals section of the docs for internal type and function documentation.","category":"page"},{"location":"public/","page":"Public","title":"Public","text":"Modules = [TermLayouts]\nPrivate = false\nOrder   = [:type, :function]","category":"page"},{"location":"public/#TermLayouts.run-Tuple{}","page":"Public","title":"TermLayouts.run","text":"Activate TermLayouts, and spawn a new REPL session\n\n\n\n\n\n","category":"method"},{"location":"#Home","page":"Home","title":"Home","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The home for TermLayouts.jl documentation.","category":"page"},{"location":"#Quickstart","page":"Home","title":"Quickstart","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Install TermLayouts:","category":"page"},{"location":"","page":"Home","title":"Home","text":"pkg> add https://github.com/soumitradev/TermLayouts.jl.git","category":"page"},{"location":"","page":"Home","title":"Home","text":"Run TermLayouts.jl by running the run() function in the REPL:","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using TermLayouts\n\njulia> TermLayouts.run()\nstarting REPL...","category":"page"},{"location":"#Configuration","page":"Home","title":"Configuration","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A TermLayouts config file is fairly simple. It can be dedescribed by the following two structures:","category":"page"},{"location":"","page":"Home","title":"Home","text":"TermLayouts.TermLayoutPreferences\nTermLayouts.PanelPrefs","category":"page"},{"location":"#TermLayouts.TermLayoutPreferences","page":"Home","title":"TermLayouts.TermLayoutPreferences","text":"Describe the layout of Panels in TermLayouts\n\nFields\n\npanel1: Left Panel\npanel2: Right Panel\n\n\n\n\n\n","category":"type"},{"location":"#TermLayouts.PanelPrefs","page":"Home","title":"TermLayouts.PanelPrefs","text":"Describe the configuration of a Panel in TermLayouts\n\nFields\n\nwidth: Percentage of the maximum width the panel takes up\ntitle: Panel title text\ntitle_color: Panel title text color. See here\nborder_color: Panel border color. See here\n\n\n\n\n\n","category":"type"},{"location":"","page":"Home","title":"Home","text":"TermLayouts is limited to two panels as of now, due to limited types of panel implementations.","category":"page"},{"location":"","page":"Home","title":"Home","text":"note: TermLayout's scoped configuration\nIf TermLayouts is the globally-installed TermLayouts, and not a version from your environment, then TermLayouts uses a global configuration for itself.If installed in an environment, TermLayouts creates a config file for itself inside that environment.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The config file can be described with the above two structs, but in reality looks something like:","category":"page"},{"location":"","page":"Home","title":"Home","text":"[TermLayouts]\npanelL_width = 80\npanelL_title = \"REPL\"\npanelL_title_color = \"blue\"\npanelL_border_color = \"blue\"\npanelR_width = 20\npanelR_title = \"Plots\"\npanelR_title_color = \"red\"\npanelR_border_color = \"red\"","category":"page"},{"location":"","page":"Home","title":"Home","text":"The TOML format is pretty self explanatory.","category":"page"},{"location":"internals/#Internals","page":"Internals","title":"Internals","text":"","category":"section"},{"location":"internals/","page":"Internals","title":"Internals","text":"Documentation for TermLayouts.jl's internal types and functions.","category":"page"},{"location":"internals/","page":"Internals","title":"Internals","text":"Modules = [TermLayouts]\nPublic = false\nOrder   = [:type, :function]","category":"page"},{"location":"internals/#TermLayouts.ColoredChar","page":"Internals","title":"TermLayouts.ColoredChar","text":"Character struct that is used to parse ANSI strings\n\n\n\n\n\n","category":"type"},{"location":"internals/#TermLayouts.EditableString","page":"Internals","title":"TermLayouts.EditableString","text":"String structure to represent any string that can be manipulated using ANSI escape codes\n\n\n\n\n\n","category":"type"},{"location":"internals/#TermLayouts.TermLayoutsState","page":"Internals","title":"TermLayouts.TermLayoutsState","text":"A struct to describe the state of TermLayouts\n\n\n\n\n\n","category":"type"},{"location":"internals/#TermLayouts.Wrapper","page":"Internals","title":"TermLayouts.Wrapper","text":"Workaround for https://github.com/julia-vscode/julia-vscode/issues/1940\n\n\n\n\n\n","category":"type"},{"location":"internals/#TermLayouts.crop_backtrace-Tuple{Any}","page":"Internals","title":"TermLayouts.crop_backtrace","text":"Crop the error backtrace so that errors don't expose internal TermLayouts functions in errors\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.display_repl_error-Tuple{Any, Any, Any}","page":"Internals","title":"TermLayouts.display_repl_error","text":"Override the way errors are displayed\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.enterchar-Tuple{TermLayouts.EditableString, Char}","page":"Internals","title":"TermLayouts.enterchar","text":"Add one character to the EditableString\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.evalrepl-NTuple{5, Any}","page":"Internals","title":"TermLayouts.evalrepl","text":"Evaluate expressions with custom backend, handle output and errors\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.find_first_topelevel_scope-Tuple{Vector{<:Union{Ptr{Nothing}, Base.InterpreterIP}}}","page":"Internals","title":"TermLayouts.find_first_topelevel_scope","text":"Find the topmost non-TermLayouts scope in a backtrace\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.get_main_mode","page":"Internals","title":"TermLayouts.get_main_mode","text":"Get the main mode of the REPL\n\n\n\n\n\n","category":"function"},{"location":"internals/#TermLayouts.hook_repl-Tuple{REPL.LineEditREPL, TermLayouts.TermLayoutsState}","page":"Internals","title":"TermLayouts.hook_repl","text":"Install REPL hooks to override how the backend evaluates expressions\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.initializeState-Tuple{}","page":"Internals","title":"TermLayouts.initializeState","text":"Initializes variables for TermLayouts\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.loadprefs-Tuple{}","page":"Internals","title":"TermLayouts.loadprefs","text":"Loads TermLayouts preferences from the environment\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.read_key","page":"Internals","title":"TermLayouts.read_key","text":"Read input from keyboard and handle relevant ANSI codes\n\n\n\n\n\n","category":"function"},{"location":"internals/#TermLayouts.run_with_backend-Tuple{Any, Any, Vararg{Any}}","page":"Internals","title":"TermLayouts.run_with_backend","text":"Pass the expression into the channels\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.simplifyANSI-Tuple{String, Bool}","page":"Internals","title":"TermLayouts.simplifyANSI","text":"Simplify an ANSI string into what ends up being displayed in the terminal\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.start_eval_backend-Tuple{Any}","page":"Internals","title":"TermLayouts.start_eval_backend","text":"Start the backend that will evaluate our expressions\n\n\n\n\n\n","category":"method"},{"location":"internals/#TermLayouts.transform_backend-NTuple{4, Any}","page":"Internals","title":"TermLayouts.transform_backend","text":"Transform the backend to change of expressions are evaluated\n\n\n\n\n\n","category":"method"}]
}
